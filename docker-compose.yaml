version: '3.4'

services:
  postgres:
    image: postgres:13-alpine
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: heimdb
    ports:
      - ${DB_PORT}:5432
    networks:
      - backend
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}
      timeout: 45s
      interval: 10s
      retries: 10
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    networks:
      - monitoring
    restart: unless-stopped
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - 9090:9090
    command: --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    networks:
      - monitoring
    restart: unless-stopped

  consul:
    container_name: consul-badger
    image: hashicorp/consul:latest
    restart: always
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    networks:
      - consul
    command: agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    hostname: my-rabbit
    ports:
      - 15672:15672
      - 5672:5672
  db:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - backend
  backend:
    # build:
    #   context: .
    #   dockerfile: Dockerfile
    image: siddhantprateek/landate-backend:latest
    container_name: landate-gateway
    environment:
      API_ACCESS_KEY: "all horses do not were spider mask"
      API_GATEWAY_PORT: 8000
      STORAGE_SERVICE_PORT: 8001
      AUTH_SERVICE_PORT: 8002
      DOCUMENT_SERVICE_PORT: 8003
      MONGO_URI: mongodb://${MONGO_USER}:${MONGO_PASSWORD}@db:27017
      POSTGRES_URI: postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable
      POSTGRES_DB_URL: postgres://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}
      DB_HOST: localhost
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: dev
      DB_NAME: heimdb
    ports:
      - 8000:8000
    depends_on:
      - db
      - consul
      - postgres
    networks:
      - backend
      - monitoring
      - consul
    restart: always


networks:
  monitoring:
  consul:
    driver: bridge
  backend:
    driver: bridge
  


volumes:
  grafana_data:
  prometheus_data:
  mongo-data:
    driver: local
  postgres-data:
    driver: local
